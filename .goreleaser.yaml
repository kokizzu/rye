# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

# Trying normal build (not tiny), without CGO (sqlite was ported to pure) and for fewer platforms

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    # - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
      - js
    goarch:
      - amd64
      - arm
      - arm64
      - wasm
    
    ignore: # List of combinations of GOOS + GOARCH + GOARM to ignore.
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: linux
        goarch: arm
      - goos: linux
        goarch: arm64

    flags:
    # - -tags=b_tiny
    - -trimpath

    ldflags:
    - "-s -w -X github.com/refaktor/rye/runner.Version={{.Version}}"

    overrides:
    - goarch: wasm
      goos: js
      flags:
      - -tags=b_tiny,b_wasm,no_sqlite,no_psql,no_mysql,no_io,no_git
      - -trimpath
      
archives:
  - formats: [ 'tar.gz' ]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]

kos:  # See https://goreleaser.com/customization/ko/
  - repositories:
    - ghcr.io/refaktor/rye
    tags:
    - '{{.Version}}'
    - latest
    bare: true
    preserve_import_paths: false
    platforms:
    - linux/amd64
    # - linux/arm64

snapshot:
  version_template: "{{ incpatch .Version }}-next"
changelog: # See https://goreleaser.com/customization/changelog/
  use: github
  sort: asc

  groups:
  - title: Features
    regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
    order: 0
  - title: "Bug fixes"
    regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: "Documentation"
    regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
    order: 2
  - title: Others
    order: 999

  # filters:
  #   exclude:
  #     - "^docs:"
  #     - "^test:"
