; Read and inspect an existing PKCS#12 file
; This is the Rye equivalent of your Go example

; Usage: Replace these with your actual file path and password
p12-file-path: "your_certificate.p12"
p12-password: "your_password"

; 1. Read the P12 file
print "Reading P12 file:" p12-file-path
p12-data: p12-file-path |read-file

; 2. Decode the P12 data
print "Decoding P12 data..."
decoded: p12-data p12-password |pkcs12-decode

private-key: decoded |first
certificates: decoded |second
ca-certificates: decoded |third

; 3. View Private Key Information
print "\n--- Private Key Information ---"
either private-key = null [
    print "No private key found in P12 file."
] [
    print "Private Key Type:" private-key |type?
    ; For security, we don't print the actual private key data
]
print "-----------------------------\n"

; 4. View Certificate Information
main-certs: certificates |to-block
either main-certs |length? = 0 [
    print "No certificates found in P12 file.\n"
] [
    print "--- Certificate Information ---"
    main-certs |each { cert idx ->
        print "Certificate #" (idx + 1) ":"
        print "  Subject:" cert |subject?
        print "  Issuer:" cert |issuer?
        print "  Serial Number:" cert |serial-number?
        print "  Not Before:" cert |not-before? |format "2006-01-02 15:04:05 MST"
        print "  Not After:" cert |not-after? |format "2006-01-02 15:04:05 MST"
        print "  Signature Algorithm:" cert |signature-algorithm?
        print "  Public Key Algorithm:" cert |public-key-algorithm?
        
        ; Key Usage
        key-usages: cert |key-usage?
        either key-usages |length? > 0 [
            print "  Key Usage:" key-usages |join ", "
        ] []
        
        ; Extended Key Usage
        ext-key-usages: cert |extended-key-usage?
        either ext-key-usages |length? > 0 [
            print "  Extended Key Usage:" ext-key-usages |join ", "
        ] []
        
        ; Subject Alternative Names (SANs)
        dns-names: cert |dns-names?
        either dns-names |length? > 0 [
            print "  DNS Names:" dns-names
        ] []
        
        ip-addresses: cert |ip-addresses?
        either ip-addresses |length? > 0 [
            print "  IP Addresses:" ip-addresses
        ] []
        
        email-addresses: cert |email-addresses?
        either email-addresses |length? > 0 [
            print "  Email Addresses:" email-addresses
        ] []
        
        ; PEM Encoded Certificate
        print "  PEM Encoded Certificate:"
        print cert |to-pem
        
        print "-----------------------------\n"
    }
]
